[
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalPermission",
        "choices": [
          {
            "type": "string",
            "enum": [
              "browserSettings"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "PermissionNoPrompt",
        "choices": [
          {
            "type": "string",
            "enum": [
              "contextualIdentities"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalPermissionNoPrompt",
        "choices": [
          {
            "type": "string",
            "enum": [
              "cookies"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "Permission",
        "choices": [
          {
            "type": "string",
            "enum": [
              "declarativeNetRequest"
            ]
          }
        ]
      },
      {
        "$extend": "OptionalPermission",
        "choices": [
          {
            "type": "string",
            "enum": [
              "declarativeNetRequestFeedback"
            ]
          }
        ]
      },
      {
        "$extend": "PermissionNoPrompt",
        "choices": [
          {
            "type": "string",
            "enum": [
              "declarativeNetRequestWithHostAccess"
            ]
          }
        ]
      },
      {
        "$extend": "WebExtensionManifest",
        "properties": {
          "declarative_net_request": {
            "optional": true,
            "type": "object",
            "properties": {
              "rule_resources": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A non-empty string uniquely identifying the ruleset. IDs beginning with \u0027_\u0027 are reserved for internal use.",
                      "type": "string",
                      "pattern": "^[^_]"
                    },
                    "enabled": {
                      "description": "Whether the ruleset is enabled by default.",
                      "type": "boolean"
                    },
                    "path": {
                      "description": "The path of the JSON ruleset relative to the extension directory.",
                      "$ref": "manifest.ExtensionURL"
                    }
                  }
                }
              }
            }
          }
        }
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "PermissionNoPrompt",
        "choices": [
          {
            "type": "string",
            "enum": [
              "dns"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalPermission",
        "choices": [
          {
            "type": "string",
            "enum": [
              "downloads",
              "downloads.open"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "PermissionPrivileged",
        "choices": [
          {
            "type": "string",
            "enum": [
              "activityLog"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "WebExtensionManifest",
        "properties": {
          "default_locale": {
            "optional": true,
            "type": "string"
          },
          "l10n_resources": {
            "optional": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalPermission",
        "choices": [
          {
            "type": "string",
            "enum": [
              "management"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "PermissionPrivileged",
        "choices": [
          {
            "type": "string",
            "enum": [
              "networkStatus"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalPermission",
        "choices": [
          {
            "type": "string",
            "enum": [
              "privacy"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "id": "ProtocolHandler",
        "description": "Represents a protocol handler definition.",
        "type": "object",
        "properties": {
          "name": {
            "description": "A user-readable title string for the protocol handler. This will be displayed to the user in interface objects as needed.",
            "type": "string"
          },
          "protocol": {
            "description": "The protocol the site wishes to handle, specified as a string. For example, you can register to handle SMS text message links by registering to handle the \u0022sms\u0022 scheme.",
            "choices": [
              {
                "type": "string",
                "enum": [
                  "bitcoin",
                  "dat",
                  "dweb",
                  "ftp",
                  "geo",
                  "gopher",
                  "im",
                  "ipfs",
                  "ipns",
                  "irc",
                  "ircs",
                  "magnet",
                  "mailto",
                  "matrix",
                  "mms",
                  "news",
                  "nntp",
                  "sip",
                  "sms",
                  "smsto",
                  "ssb",
                  "ssh",
                  "tel",
                  "urn",
                  "webcal",
                  "wtai",
                  "xmpp"
                ]
              },
              {
                "type": "string",
                "pattern": "^(ext|web)\\\u002B[a-z0-9.\u002B-]\u002B$"
              }
            ]
          },
          "uriTemplate": {
            "description": "The URL of the handler, as a string. This string should include \u0022%s\u0022 as a placeholder which will be replaced with the escaped URL of the document to be handled. This URL might be a true URL, or it could be a phone number, email address, or so forth.",
            "choices": [
              {
                "$ref": "ExtensionURL"
              },
              {
                "$ref": "HttpURL"
              }
            ]
          }
        }
      },
      {
        "$extend": "WebExtensionManifest",
        "properties": {
          "protocol_handlers": {
            "description": "A list of protocol handler definitions.",
            "optional": true,
            "type": "array",
            "items": {
              "$ref": "ProtocolHandler"
            }
          }
        }
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalPermission",
        "choices": [
          {
            "type": "string",
            "enum": [
              "proxy"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalPermission",
        "choices": [
          {
            "type": "string",
            "enum": [
              "nativeMessaging"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalPermissionNoPrompt",
        "choices": [
          {
            "type": "string",
            "enum": [
              "scripting"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "PermissionPrivileged",
        "choices": [
          {
            "type": "string",
            "enum": [
              "telemetry"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "PermissionNoPrompt",
        "choices": [
          {
            "type": "string",
            "enum": [
              "theme"
            ]
          }
        ]
      },
      {
        "id": "ThemeColor",
        "choices": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "minItems": 3,
            "maxItems": 3,
            "items": {
              "type": "integer",
              "minimum": 0,
              "maximum": 255
            }
          },
          {
            "type": "array",
            "minItems": 4,
            "maxItems": 4,
            "items": {
              "type": "number"
            }
          }
        ]
      },
      {
        "id": "ThemeExperiment",
        "type": "object",
        "properties": {
          "stylesheet": {
            "optional": true,
            "$ref": "ExtensionURL"
          },
          "images": {
            "optional": true,
            "type": "object"
          },
          "colors": {
            "optional": true,
            "type": "object"
          },
          "properties": {
            "optional": true,
            "type": "object"
          }
        }
      },
      {
        "id": "ThemeType",
        "type": "object",
        "properties": {
          "images": {
            "optional": true,
            "type": "object",
            "properties": {
              "additional_backgrounds": {
                "optional": true,
                "type": "array",
                "maxItems": 15,
                "items": {
                  "$ref": "ImageDataOrExtensionURL"
                }
              },
              "headerURL": {
                "optional": true,
                "$ref": "ImageDataOrExtensionURL",
                "deprecated": "Unsupported images property, use \u0027theme.images.theme_frame\u0027, this alias is ignored in Firefox \u003E= 70."
              },
              "theme_frame": {
                "optional": true,
                "$ref": "ImageDataOrExtensionURL"
              }
            }
          },
          "colors": {
            "optional": true,
            "type": "object",
            "properties": {
              "tab_selected": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "accentcolor": {
                "optional": true,
                "$ref": "ThemeColor",
                "deprecated": "Unsupported colors property, use \u0027theme.colors.frame\u0027, this alias is ignored in Firefox \u003E= 70."
              },
              "frame": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "frame_inactive": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "textcolor": {
                "optional": true,
                "$ref": "ThemeColor",
                "deprecated": "Unsupported color property, use \u0027theme.colors.tab_background_text\u0027, this alias is ignored in Firefox \u003E= 70."
              },
              "tab_background_text": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "tab_background_separator": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "tab_loading": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "tab_text": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "tab_line": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "toolbar": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "toolbar_text": {
                "description": "This color property is an alias of \u0027bookmark_text\u0027.",
                "optional": true,
                "$ref": "ThemeColor"
              },
              "bookmark_text": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "toolbar_field": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "toolbar_field_text": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "toolbar_field_border": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "toolbar_field_separator": {
                "optional": true,
                "$ref": "ThemeColor",
                "deprecated": "This color property is ignored in Firefox \u003E= 89."
              },
              "toolbar_top_separator": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "toolbar_bottom_separator": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "toolbar_vertical_separator": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "icons": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "icons_attention": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "button_background_hover": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "button_background_active": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "popup": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "popup_text": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "popup_border": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "toolbar_field_focus": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "toolbar_field_text_focus": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "toolbar_field_border_focus": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "popup_highlight": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "popup_highlight_text": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "ntp_background": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "ntp_card_background": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "ntp_text": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "sidebar": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "sidebar_border": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "sidebar_text": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "sidebar_highlight": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "sidebar_highlight_text": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "toolbar_field_highlight": {
                "optional": true,
                "$ref": "ThemeColor"
              },
              "toolbar_field_highlight_text": {
                "optional": true,
                "$ref": "ThemeColor"
              }
            }
          },
          "properties": {
            "optional": true,
            "type": "object",
            "properties": {
              "additional_backgrounds_alignment": {
                "optional": true,
                "type": "array",
                "maxItems": 15,
                "items": {
                  "type": "string",
                  "enum": [
                    "bottom",
                    "center",
                    "left",
                    "right",
                    "top",
                    "center bottom",
                    "center center",
                    "center top",
                    "left bottom",
                    "left center",
                    "left top",
                    "right bottom",
                    "right center",
                    "right top"
                  ]
                }
              },
              "additional_backgrounds_tiling": {
                "optional": true,
                "type": "array",
                "maxItems": 15,
                "items": {
                  "type": "string",
                  "enum": [
                    "no-repeat",
                    "repeat",
                    "repeat-x",
                    "repeat-y"
                  ]
                }
              },
              "color_scheme": {
                "optional": true,
                "type": "string",
                "enum": [
                  "auto",
                  "light",
                  "dark",
                  "system"
                ]
              },
              "content_color_scheme": {
                "optional": true,
                "type": "string",
                "enum": [
                  "auto",
                  "light",
                  "dark",
                  "system"
                ]
              }
            }
          }
        }
      },
      {
        "id": "ThemeManifest",
        "description": "Contents of manifest.json for a static theme",
        "type": "object",
        "properties": {
          "theme": {
            "$ref": "ThemeType"
          },
          "dark_theme": {
            "optional": true,
            "$ref": "ThemeType"
          },
          "default_locale": {
            "optional": true,
            "type": "string"
          },
          "theme_experiment": {
            "optional": true,
            "$ref": "ThemeExperiment"
          },
          "icons": {
            "optional": true,
            "type": "object"
          }
        }
      },
      {
        "$extend": "WebExtensionManifest",
        "properties": {
          "theme_experiment": {
            "optional": true,
            "$ref": "ThemeExperiment"
          }
        }
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalOnlyPermission",
        "choices": [
          {
            "type": "string",
            "enum": [
              "trialML"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalOnlyPermission",
        "choices": [
          {
            "type": "string",
            "enum": [
              "userScripts"
            ]
          }
        ]
      },
      {
        "$extend": "WebExtensionManifest",
        "properties": {
          "user_scripts": {
            "optional": true,
            "type": "object",
            "properties": {
              "api_script": {
                "optional": true,
                "$ref": "manifest.ExtensionURL"
              }
            }
          }
        }
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalPermission",
        "choices": [
          {
            "type": "string",
            "enum": [
              "webNavigation"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalPermissionNoPrompt",
        "choices": [
          {
            "type": "string",
            "enum": [
              "webRequest",
              "webRequestAuthProvider",
              "webRequestBlocking",
              "webRequestFilterResponse",
              "webRequestFilterResponse.serviceWorkerScript"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalPermission",
        "choices": [
          {
            "type": "string",
            "enum": [
              "bookmarks"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "id": "ActionManifest",
        "type": "object",
        "properties": {
          "default_title": {
            "optional": true,
            "type": "string"
          },
          "default_icon": {
            "optional": true,
            "$ref": "IconPath"
          },
          "theme_icons": {
            "description": "Specifies icons to use for dark and light themes",
            "optional": true,
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "ThemeIcons"
            }
          },
          "default_popup": {
            "optional": true,
            "type": "string",
            "format": "relativeUrl"
          },
          "browser_style": {
            "description": "Deprecated in Manifest V3.",
            "optional": true,
            "type": "boolean"
          },
          "default_area": {
            "description": "Defines the location the browserAction will appear by default.  The default location is navbar.",
            "optional": true,
            "type": "string",
            "enum": [
              "navbar",
              "menupanel",
              "tabstrip",
              "personaltoolbar"
            ]
          }
        }
      },
      {
        "$extend": "WebExtensionManifest",
        "properties": {
          "action": {
            "optional": true,
            "$ref": "ActionManifest"
          }
        }
      },
      {
        "$extend": "WebExtensionManifest",
        "properties": {
          "browser_action": {
            "optional": true,
            "$ref": "ActionManifest"
          }
        }
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalPermission",
        "choices": [
          {
            "type": "string",
            "enum": [
              "browsingData"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "PermissionNoPrompt",
        "choices": [
          {
            "type": "string",
            "enum": [
              "captivePortal"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "WebExtensionManifest",
        "properties": {
          "chrome_settings_overrides": {
            "optional": true,
            "type": "object",
            "properties": {
              "homepage": {
                "optional": true,
                "type": "string",
                "format": "homepageUrl"
              },
              "search_provider": {
                "optional": true,
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "keyword": {
                    "optional": true,
                    "choices": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "string"
                        }
                      }
                    ]
                  },
                  "search_url": {
                    "type": "string",
                    "format": "url",
                    "pattern": "^(https://|http://(localhost|127\\.0\\.0\\.1|\\[::1\\])(:\\d*)?(/|$)).*$"
                  },
                  "favicon_url": {
                    "optional": true,
                    "choices": [
                      {
                        "type": "string",
                        "format": "relativeUrl"
                      },
                      {
                        "type": "string",
                        "format": "strictRelativeUrl"
                      }
                    ]
                  },
                  "suggest_url": {
                    "optional": true,
                    "type": "string",
                    "pattern": "^$|^(https://|http://(localhost|127\\.0\\.0\\.1|\\[::1\\])(:\\d*)?(/|$)).*$"
                  },
                  "instant_url": {
                    "optional": true,
                    "type": "string",
                    "deprecated": "Unsupported on Firefox at this time.",
                    "format": "url"
                  },
                  "image_url": {
                    "optional": true,
                    "type": "string",
                    "deprecated": "Unsupported on Firefox at this time.",
                    "format": "url"
                  },
                  "search_url_get_params": {
                    "description": "GET parameters to the search_url as a query string.",
                    "optional": true,
                    "type": "string"
                  },
                  "search_url_post_params": {
                    "description": "POST parameters to the search_url as a query string.",
                    "optional": true,
                    "type": "string"
                  },
                  "suggest_url_get_params": {
                    "description": "GET parameters to the suggest_url as a query string.",
                    "optional": true,
                    "type": "string"
                  },
                  "suggest_url_post_params": {
                    "description": "POST parameters to the suggest_url as a query string.",
                    "optional": true,
                    "type": "string"
                  },
                  "instant_url_post_params": {
                    "optional": true,
                    "type": "string",
                    "deprecated": "Unsupported on Firefox at this time."
                  },
                  "image_url_post_params": {
                    "optional": true,
                    "type": "string",
                    "deprecated": "Unsupported on Firefox at this time."
                  },
                  "search_form": {
                    "optional": true,
                    "type": "string",
                    "deprecated": "Unsupported on Firefox at this time.",
                    "format": "url",
                    "pattern": "^(https://|http://(localhost|127\\.0\\.0\\.1|\\[::1\\])(:\\d*)?(/|$)).*$"
                  },
                  "alternate_urls": {
                    "optional": true,
                    "type": "array",
                    "deprecated": "Unsupported on Firefox at this time.",
                    "items": {
                      "type": "string",
                      "format": "url"
                    }
                  },
                  "prepopulated_id": {
                    "optional": true,
                    "type": "integer",
                    "deprecated": "Unsupported on Firefox."
                  },
                  "encoding": {
                    "description": "Encoding of the search term.",
                    "optional": true,
                    "type": "string"
                  },
                  "is_default": {
                    "description": "Sets the default engine to a built-in engine only.",
                    "optional": true,
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "id": "KeyName",
        "type": "string",
        "format": "manifestShortcutKey"
      },
      {
        "$extend": "WebExtensionManifest",
        "properties": {
          "commands": {
            "optional": true,
            "type": "object"
          }
        }
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "WebExtensionManifest",
        "properties": {
          "devtools_page": {
            "optional": true,
            "$ref": "ExtensionURL"
          }
        }
      },
      {
        "$extend": "OptionalPermission",
        "choices": [
          {
            "type": "string",
            "enum": [
              "devtools"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalPermission",
        "choices": [
          {
            "type": "string",
            "enum": [
              "find"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalPermission",
        "choices": [
          {
            "type": "string",
            "enum": [
              "history"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "PermissionNoPrompt",
        "choices": [
          {
            "type": "string",
            "enum": [
              "identity"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "PermissionNoPrompt",
        "choices": [
          {
            "type": "string",
            "enum": [
              "menus",
              "contextMenus"
            ]
          }
        ]
      },
      {
        "$extend": "OptionalPermissionNoPrompt",
        "choices": [
          {
            "type": "string",
            "enum": [
              "menus.overrideContext"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "PermissionPrivileged",
        "choices": [
          {
            "type": "string",
            "enum": [
              "normandyAddonStudy"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "WebExtensionManifest",
        "properties": {
          "omnibox": {
            "optional": true,
            "type": "object",
            "properties": {
              "keyword": {
                "type": "string",
                "pattern": "^[^?\\s:][^\\s:]*$"
              }
            }
          }
        }
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "WebExtensionManifest",
        "properties": {
          "page_action": {
            "optional": true,
            "type": "object",
            "properties": {
              "default_title": {
                "optional": true,
                "type": "string"
              },
              "default_icon": {
                "optional": true,
                "$ref": "IconPath"
              },
              "default_popup": {
                "optional": true,
                "type": "string",
                "format": "relativeUrl"
              },
              "browser_style": {
                "description": "Deprecated in Manifest V3.",
                "optional": true,
                "type": "boolean"
              },
              "show_matches": {
                "optional": true,
                "type": "array",
                "minItems": 1,
                "items": {
                  "$ref": "MatchPattern"
                }
              },
              "hide_matches": {
                "optional": true,
                "type": "array",
                "minItems": 1,
                "items": {
                  "$ref": "MatchPatternRestricted"
                }
              },
              "pinned": {
                "optional": true,
                "type": "boolean"
              }
            }
          }
        }
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalPermission",
        "choices": [
          {
            "type": "string",
            "enum": [
              "pkcs11"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "PermissionNoPrompt",
        "choices": [
          {
            "type": "string",
            "enum": [
              "geckoProfiler"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalPermissionNoPrompt",
        "choices": [
          {
            "type": "string",
            "enum": [
              "search"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalPermission",
        "choices": [
          {
            "type": "string",
            "enum": [
              "sessions"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "WebExtensionManifest",
        "properties": {
          "sidebar_action": {
            "optional": true,
            "type": "object",
            "properties": {
              "default_title": {
                "optional": true,
                "type": "string"
              },
              "default_icon": {
                "optional": true,
                "$ref": "IconPath"
              },
              "browser_style": {
                "description": "Defaults to true in Manifest V2; Deprecated in Manifest V3.",
                "optional": true,
                "type": "boolean"
              },
              "default_panel": {
                "type": "string",
                "format": "strictRelativeUrl"
              },
              "open_at_install": {
                "description": "Whether or not the sidebar is opened at install. Default is \u003Ccode\u003Etrue\u003C/code\u003E.",
                "optional": true,
                "type": "boolean"
              }
            }
          }
        }
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalPermissionNoPrompt",
        "choices": [
          {
            "type": "string",
            "enum": [
              "activeTab"
            ]
          }
        ]
      },
      {
        "$extend": "OptionalPermission",
        "choices": [
          {
            "type": "string",
            "enum": [
              "tabs",
              "tabHide"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalPermission",
        "choices": [
          {
            "type": "string",
            "enum": [
              "topSites"
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "WebExtensionManifest",
        "properties": {
          "chrome_url_overrides": {
            "optional": true,
            "type": "object",
            "properties": {
              "newtab": {
                "optional": true,
                "$ref": "ExtensionURL"
              },
              "bookmarks": {
                "optional": true,
                "$ref": "ExtensionURL",
                "unsupported": true
              },
              "history": {
                "optional": true,
                "$ref": "ExtensionURL",
                "unsupported": true
              }
            }
          }
        }
      }
    ]
  },
  {
    "namespace": "manifest",
    "permissions": [],
    "types": [
      {
        "id": "ManifestBase",
        "description": "Common properties for all manifest.json files",
        "type": "object",
        "properties": {
          "manifest_version": {
            "type": "integer",
            "minimum": 2,
            "maximum": 3
          },
          "applications": {
            "description": "The applications property is deprecated, please use \u0027browser_specific_settings\u0027",
            "optional": true,
            "$ref": "DeprecatedApplications"
          },
          "browser_specific_settings": {
            "optional": true,
            "$ref": "BrowserSpecificSettings"
          },
          "name": {
            "description": "Name must be at least 2, and should be at most 75 characters",
            "optional": false,
            "type": "string"
          },
          "short_name": {
            "optional": true,
            "type": "string"
          },
          "description": {
            "optional": true,
            "type": "string"
          },
          "author": {
            "optional": true,
            "type": "string"
          },
          "version": {
            "optional": false,
            "type": "string",
            "format": "versionString"
          },
          "homepage_url": {
            "optional": true,
            "type": "string",
            "format": "url"
          },
          "install_origins": {
            "optional": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "origin"
            }
          },
          "developer": {
            "optional": true,
            "type": "object",
            "properties": {
              "name": {
                "optional": true,
                "type": "string"
              },
              "url": {
                "optional": true,
                "type": "string",
                "format": "url"
              }
            }
          }
        }
      },
      {
        "id": "WebExtensionManifest",
        "description": "Represents a WebExtension manifest.json file",
        "type": "object",
        "properties": {
          "minimum_chrome_version": {
            "optional": true,
            "type": "string"
          },
          "minimum_opera_version": {
            "optional": true,
            "type": "string"
          },
          "icons": {
            "optional": true,
            "type": "object"
          },
          "incognito": {
            "description": "The \u0027split\u0027 value is not supported.",
            "optional": true,
            "type": "string",
            "enum": [
              "not_allowed",
              "spanning",
              "split"
            ]
          },
          "background": {
            "optional": true,
            "choices": [
              {
                "type": "object",
                "properties": {
                  "service_worker": {
                    "optional": true,
                    "$ref": "ExtensionURL"
                  },
                  "page": {
                    "optional": true,
                    "$ref": "ExtensionURL"
                  },
                  "scripts": {
                    "optional": true,
                    "type": "array",
                    "items": {
                      "$ref": "ExtensionURL"
                    }
                  },
                  "type": {
                    "description": "Only supported for page/scripts; not for service_worker yet, see bug 1775574",
                    "optional": true,
                    "type": "string",
                    "enum": [
                      "module",
                      "classic"
                    ]
                  },
                  "persistent": {
                    "optional": true,
                    "type": "boolean"
                  },
                  "preferred_environment": {
                    "optional": true,
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "service_worker",
                        "document"
                      ]
                    }
                  }
                }
              }
            ]
          },
          "options_page": {
            "description": "Alias property for options_ui.page, ignored when options_ui.page is set. When using this property the options page is always opened in a new tab.",
            "optional": true,
            "$ref": "ExtensionURL"
          },
          "options_ui": {
            "optional": true,
            "type": "object",
            "properties": {
              "page": {
                "$ref": "ExtensionURL"
              },
              "browser_style": {
                "description": "Defaults to true in Manifest V2; Deprecated in Manifest V3.",
                "optional": true,
                "type": "boolean"
              },
              "chrome_style": {
                "description": "chrome_style is ignored in Firefox. Its replacement (browser_style) has been deprecated.",
                "optional": true,
                "type": "boolean"
              },
              "open_in_tab": {
                "optional": true,
                "type": "boolean"
              }
            }
          },
          "content_scripts": {
            "optional": true,
            "type": "array",
            "items": {
              "$ref": "ContentScript"
            }
          },
          "content_security_policy": {
            "optional": true,
            "choices": [
              {
                "type": "string",
                "format": "contentSecurityPolicy"
              },
              {
                "type": "object",
                "properties": {
                  "extension_pages": {
                    "description": "The Content Security Policy used for extension pages.",
                    "optional": true,
                    "type": "string",
                    "format": "contentSecurityPolicy"
                  }
                }
              }
            ]
          },
          "permissions": {
            "optional": true,
            "choices": [
              {
                "type": "array",
                "items": {
                  "$ref": "PermissionOrOrigin"
                }
              },
              {
                "type": "array",
                "items": {
                  "$ref": "Permission"
                }
              }
            ]
          },
          "granted_host_permissions": {
            "optional": true,
            "type": "boolean"
          },
          "host_permissions": {
            "optional": true,
            "type": "array",
            "items": {
              "$ref": "MatchPattern"
            }
          },
          "optional_host_permissions": {
            "optional": true,
            "type": "array",
            "items": {
              "$ref": "MatchPattern"
            }
          },
          "optional_permissions": {
            "optional": true,
            "type": "array",
            "items": {
              "$ref": "OptionalPermissionOrOrigin"
            }
          },
          "web_accessible_resources": {
            "optional": true,
            "choices": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "resources": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "matches": {
                      "optional": true,
                      "type": "array",
                      "items": {
                        "$ref": "MatchPattern"
                      }
                    },
                    "extension_ids": {
                      "optional": true,
                      "type": "array",
                      "items": {
                        "choices": [
                          {
                            "$ref": "ExtensionID"
                          },
                          {
                            "type": "string",
                            "enum": [
                              "*"
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            ]
          },
          "hidden": {
            "optional": true,
            "type": "boolean"
          }
        }
      },
      {
        "id": "WebExtensionLangpackManifest",
        "description": "Represents a WebExtension language pack manifest.json file",
        "type": "object",
        "properties": {
          "langpack_id": {
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z-]\u002B$"
          },
          "languages": {
            "type": "object"
          },
          "sources": {
            "optional": true,
            "type": "object"
          }
        }
      },
      {
        "id": "WebExtensionDictionaryManifest",
        "description": "Represents a WebExtension dictionary manifest.json file",
        "type": "object",
        "properties": {
          "dictionaries": {
            "type": "object"
          }
        }
      },
      {
        "id": "ThemeIcons",
        "type": "object",
        "properties": {
          "light": {
            "description": "A light icon to use for dark themes",
            "$ref": "ExtensionURL"
          },
          "dark": {
            "description": "The dark icon to use for light themes",
            "$ref": "ExtensionURL"
          },
          "size": {
            "description": "The size of the icons",
            "type": "integer"
          }
        }
      },
      {
        "id": "OptionalOnlyPermission",
        "choices": [
          {
            "type": "string",
            "enum": []
          }
        ]
      },
      {
        "id": "OptionalPermissionNoPrompt",
        "choices": [
          {
            "type": "string",
            "enum": [
              "idle"
            ]
          }
        ]
      },
      {
        "id": "OptionalPermission",
        "choices": [
          {
            "$ref": "OptionalPermissionNoPrompt"
          },
          {
            "type": "string",
            "enum": [
              "clipboardRead",
              "clipboardWrite",
              "geolocation",
              "notifications"
            ]
          }
        ]
      },
      {
        "id": "OptionalPermissionOrOrigin",
        "choices": [
          {
            "$ref": "OptionalPermission"
          },
          {
            "$ref": "OptionalOnlyPermission"
          },
          {
            "$ref": "MatchPattern"
          }
        ]
      },
      {
        "id": "PermissionPrivileged",
        "choices": [
          {
            "type": "string",
            "enum": [
              "mozillaAddons"
            ]
          }
        ]
      },
      {
        "id": "PermissionNoPrompt",
        "choices": [
          {
            "$ref": "OptionalPermissionNoPrompt"
          },
          {
            "$ref": "PermissionPrivileged"
          },
          {
            "type": "string",
            "enum": [
              "alarms",
              "storage",
              "unlimitedStorage"
            ]
          }
        ]
      },
      {
        "id": "Permission",
        "choices": [
          {
            "$ref": "PermissionNoPrompt"
          },
          {
            "$ref": "OptionalPermission"
          }
        ]
      },
      {
        "id": "PermissionOrOrigin",
        "choices": [
          {
            "$ref": "Permission"
          },
          {
            "$ref": "MatchPattern"
          }
        ]
      },
      {
        "id": "HttpURL",
        "type": "string",
        "format": "url",
        "pattern": "^https?://.*$"
      },
      {
        "id": "ExtensionURL",
        "type": "string",
        "format": "strictRelativeUrl"
      },
      {
        "id": "ExtensionFileUrl",
        "type": "string",
        "format": "strictRelativeUrl",
        "pattern": "\\S"
      },
      {
        "id": "ImageDataOrExtensionURL",
        "type": "string",
        "format": "imageDataOrStrictRelativeUrl"
      },
      {
        "id": "ExtensionID",
        "choices": [
          {
            "type": "string",
            "pattern": "(?i)^\\{[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\}$"
          },
          {
            "type": "string",
            "pattern": "(?i)^[a-z0-9-._]*@[a-z0-9-._]\u002B$"
          }
        ]
      },
      {
        "id": "FirefoxSpecificProperties",
        "type": "object",
        "properties": {
          "id": {
            "optional": true,
            "$ref": "ExtensionID"
          },
          "update_url": {
            "optional": true,
            "type": "string",
            "format": "url"
          },
          "strict_min_version": {
            "optional": true,
            "type": "string"
          },
          "strict_max_version": {
            "optional": true,
            "type": "string"
          },
          "admin_install_only": {
            "optional": true,
            "type": "boolean"
          }
        }
      },
      {
        "id": "GeckoAndroidSpecificProperties",
        "type": "object",
        "properties": {
          "strict_min_version": {
            "optional": true,
            "type": "string"
          },
          "strict_max_version": {
            "optional": true,
            "type": "string"
          }
        }
      },
      {
        "id": "DeprecatedApplications",
        "type": "object",
        "properties": {
          "gecko": {
            "optional": true,
            "$ref": "FirefoxSpecificProperties"
          },
          "gecko_android": {
            "optional": true,
            "$ref": "GeckoAndroidSpecificProperties",
            "unsupported": true
          }
        }
      },
      {
        "id": "BrowserSpecificSettings",
        "type": "object",
        "properties": {
          "gecko": {
            "optional": true,
            "$ref": "FirefoxSpecificProperties"
          },
          "gecko_android": {
            "optional": true,
            "$ref": "GeckoAndroidSpecificProperties"
          }
        }
      },
      {
        "id": "MatchPattern",
        "choices": [
          {
            "type": "string",
            "enum": [
              "\u003Call_urls\u003E"
            ]
          },
          {
            "$ref": "MatchPatternRestricted"
          },
          {
            "$ref": "MatchPatternUnestricted"
          }
        ]
      },
      {
        "id": "MatchPatternRestricted",
        "description": "Same as MatchPattern above, but excludes \u003Call_urls\u003E",
        "choices": [
          {
            "type": "string",
            "pattern": "^(https?|wss?|file|ftp|\\*)://(\\*|\\*\\.[^*/]\u002B|[^*/]\u002B)/.*$"
          },
          {
            "type": "string",
            "pattern": "^file:///.*$"
          }
        ]
      },
      {
        "id": "MatchPatternUnestricted",
        "description": "Mostly unrestricted match patterns for privileged add-ons. This should technically be rejected for unprivileged add-ons, but, reasons. The MatchPattern class will still refuse privileged schemes for those extensions.",
        "choices": [
          {
            "type": "string",
            "pattern": "^resource://(\\*|\\*\\.[^*/]\u002B|[^*/]\u002B)/.*$|^about:"
          }
        ]
      },
      {
        "id": "ContentScript",
        "description": "Details of the script or CSS to inject. Either the code or the file property must be set, but both may not be set at the same time. Based on InjectDetails, but using underscore rather than camel case naming conventions.",
        "type": "object",
        "properties": {
          "matches": {
            "optional": false,
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "MatchPattern"
            }
          },
          "exclude_matches": {
            "optional": true,
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "MatchPattern"
            }
          },
          "include_globs": {
            "optional": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "exclude_globs": {
            "optional": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "css": {
            "description": "The list of CSS files to inject",
            "optional": true,
            "type": "array",
            "items": {
              "$ref": "ExtensionURL"
            }
          },
          "js": {
            "description": "The list of JS files to inject",
            "optional": true,
            "type": "array",
            "items": {
              "$ref": "ExtensionURL"
            }
          },
          "all_frames": {
            "description": "If allFrames is \u003Ccode\u003Etrue\u003C/code\u003E, implies that the JavaScript or CSS should be injected into all frames of current page. By default, it\u0027s \u003Ccode\u003Efalse\u003C/code\u003E and is only injected into the top frame.",
            "optional": true,
            "type": "boolean"
          },
          "match_about_blank": {
            "description": "If match_about_blank is true, then the code is also injected in about:blank and about:srcdoc frames if your extension has access to its parent document. Ignored if match_origin_as_fallback is specified. By default it is \u003Ccode\u003Efalse\u003C/code\u003E.",
            "optional": true,
            "type": "boolean"
          },
          "match_origin_as_fallback": {
            "description": "If match_origin_as_fallback is true, then the code is also injected in about:, data:, blob: when their origin matches the pattern in \u0027matches\u0027, even if the actual document origin is opaque (due to the use of CSP sandbox or iframe sandbox). Match patterns in \u0027matches\u0027 must specify a wildcard path glob. By default it is \u003Ccode\u003Efalse\u003C/code\u003E.",
            "optional": true,
            "type": "boolean"
          },
          "run_at": {
            "description": "The soonest that the JavaScript or CSS will be injected into the tab. Defaults to \u0022document_idle\u0022.",
            "optional": true,
            "$ref": "extensionTypes.RunAt"
          },
          "world": {
            "description": "The JavaScript world for a script to execute within. Defaults to \u0022ISOLATED\u0022.",
            "optional": true,
            "$ref": "extensionTypes.ExecutionWorld"
          }
        }
      },
      {
        "id": "IconPath",
        "choices": [
          {
            "type": "object"
          },
          {
            "$ref": "ExtensionFileUrl"
          }
        ]
      },
      {
        "id": "IconImageData",
        "choices": [
          {
            "type": "object"
          },
          {
            "$ref": "ImageData"
          }
        ]
      },
      {
        "id": "ImageData",
        "type": "object"
      },
      {
        "id": "UnrecognizedProperty",
        "type": "any",
        "deprecated": "An unexpected property was found in the WebExtension manifest."
      }
    ]
  },
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "WebExtensionManifest",
        "properties": {
          "browser_action": {
            "optional": true,
            "type": "object",
            "properties": {
              "default_title": {
                "optional": true,
                "type": "string"
              },
              "default_icon": {
                "optional": true,
                "$ref": "IconPath"
              },
              "theme_icons": {
                "description": "Specifies icons to use for dark and light themes",
                "optional": true,
                "type": "array",
                "minItems": 1,
                "items": {
                  "$ref": "ThemeIcons"
                }
              },
              "default_popup": {
                "optional": true,
                "type": "string",
                "format": "relativeUrl"
              },
              "browser_style": {
                "optional": true,
                "type": "boolean"
              },
              "default_area": {
                "description": "Defines the location the browserAction will appear by default.  The default location is navbar.",
                "optional": true,
                "type": "string",
                "enum": [
                  "navbar",
                  "menupanel",
                  "tabstrip",
                  "personaltoolbar"
                ]
              }
            }
          }
        }
      }
    ]
  }
]