[
  {
    "namespace": "types",
    "description": "Contains types used by other schemas.",
    "types": [
      {
        "id": "SettingScope",
        "description": "The scope of the Setting. One of\u003Cul\u003E\u003Cli\u003E\u003Cvar\u003Eregular\u003C/var\u003E: setting for the regular profile (which is inherited by the incognito profile if not overridden elsewhere),\u003C/li\u003E\u003Cli\u003E\u003Cvar\u003Eregular_only\u003C/var\u003E: setting for the regular profile only (not inherited by the incognito profile),\u003C/li\u003E\u003Cli\u003E\u003Cvar\u003Eincognito_persistent\u003C/var\u003E: setting for the incognito profile that survives browser restarts (overrides regular preferences),\u003C/li\u003E\u003Cli\u003E\u003Cvar\u003Eincognito_session_only\u003C/var\u003E: setting for the incognito profile that can only be set during an incognito session and is deleted when the incognito session ends (overrides regular and incognito_persistent preferences).\u003C/li\u003E\u003C/ul\u003E Only \u003Cvar\u003Eregular\u003C/var\u003E is supported by Firefox at this time.",
        "type": "string",
        "enum": [
          "regular",
          "regular_only",
          "incognito_persistent",
          "incognito_session_only"
        ]
      },
      {
        "id": "LevelOfControl",
        "description": "One of\u003Cul\u003E\u003Cli\u003E\u003Cvar\u003Enot_controllable\u003C/var\u003E: cannot be controlled by any extension\u003C/li\u003E\u003Cli\u003E\u003Cvar\u003Econtrolled_by_other_extensions\u003C/var\u003E: controlled by extensions with higher precedence\u003C/li\u003E\u003Cli\u003E\u003Cvar\u003Econtrollable_by_this_extension\u003C/var\u003E: can be controlled by this extension\u003C/li\u003E\u003Cli\u003E\u003Cvar\u003Econtrolled_by_this_extension\u003C/var\u003E: controlled by this extension\u003C/li\u003E\u003C/ul\u003E",
        "type": "string",
        "enum": [
          "not_controllable",
          "controlled_by_other_extensions",
          "controllable_by_this_extension",
          "controlled_by_this_extension"
        ]
      },
      {
        "id": "Setting",
        "type": "object",
        "functions": [
          {
            "name": "get",
            "description": "Gets the value of a setting.",
            "async": "callback",
            "type": "function",
            "parameters": [
              {
                "name": "details",
                "description": "Which setting to consider.",
                "type": "object",
                "properties": {
                  "incognito": {
                    "description": "Whether to return the value that applies to the incognito session (default false).",
                    "optional": true,
                    "type": "boolean"
                  }
                }
              },
              {
                "name": "callback",
                "type": "function",
                "parameters": [
                  {
                    "name": "details",
                    "description": "Details of the currently effective value.",
                    "type": "object",
                    "properties": {
                      "value": {
                        "description": "The value of the setting.",
                        "type": "any"
                      },
                      "levelOfControl": {
                        "description": "The level of control of the setting.",
                        "$ref": "types.LevelOfControl"
                      },
                      "incognitoSpecific": {
                        "description": "Whether the effective value is specific to the incognito session.\u003Cbr/\u003EThis property will \u003Cem\u003Eonly\u003C/em\u003E be present if the \u003Cvar\u003Eincognito\u003C/var\u003E property in the \u003Cvar\u003Edetails\u003C/var\u003E parameter of \u003Ccode\u003Eget()\u003C/code\u003E was true.",
                        "optional": true,
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "set",
            "description": "Sets the value of a setting.",
            "async": "callback",
            "type": "function",
            "parameters": [
              {
                "name": "details",
                "description": "Which setting to change.",
                "type": "object",
                "properties": {
                  "value": {
                    "description": "The value of the setting. \u003Cbr/\u003ENote that every setting has a specific value type, which is described together with the setting. An extension should \u003Cem\u003Enot\u003C/em\u003E set a value of a different type.",
                    "type": "any"
                  },
                  "scope": {
                    "description": "Where to set the setting (default: regular).",
                    "optional": true,
                    "$ref": "types.SettingScope"
                  }
                }
              },
              {
                "name": "callback",
                "description": "Called at the completion of the set operation.",
                "optional": true,
                "type": "function",
                "parameters": []
              }
            ]
          },
          {
            "name": "clear",
            "description": "Clears the setting, restoring any default value.",
            "async": "callback",
            "type": "function",
            "parameters": [
              {
                "name": "details",
                "description": "Which setting to clear.",
                "type": "object",
                "properties": {
                  "scope": {
                    "description": "Where to clear the setting (default: regular).",
                    "optional": true,
                    "$ref": "types.SettingScope"
                  }
                }
              },
              {
                "name": "callback",
                "description": "Called at the completion of the clear operation.",
                "optional": true,
                "type": "function",
                "parameters": []
              }
            ]
          }
        ]
      }
    ]
  }
]